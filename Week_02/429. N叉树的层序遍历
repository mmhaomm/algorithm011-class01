/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        vector<vector<int>> ans;
        queue<Node*>line;
        if (root) line.push(root);
        while (!line.empty()) {
            int levelsize = line.size();
            vector<int> level;
            while (levelsize--){
                Node* tmp = line.front();
                line.pop();
                level.push_back(tmp->val);
                int n=tmp->children.size();
                for (int i=0;i<n;i++) 
                    if (tmp->children[i]) line.push(tmp->children[i]);              
            }
            if (level.size()!=0) ans.push_back(level);
        }
        return ans;  
    }
};
