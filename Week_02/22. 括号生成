class Solution {
public:
    vector<string> generateParenthesis(int n) {
        vector<string> ans;
        int left=0,right=0;
        string path="";
        DFS(ans,path,n,left,right);
        return ans;
    }
    void DFS(vector<string>&ans,string path,int n,int left,int right) {
    
        if (right == n && left==n) ans.push_back(path);
        else {
            if (left<n) DFS(ans,path+'(',n,left+1,right);
            if (left>right) DFS(ans,path+')',n,left,right+1);
        }
    }
};
