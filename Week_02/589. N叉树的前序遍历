/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<int> preorder(Node* root) {
        vector<int> ans;
        stack<Node*> line;
        if (root) line.push(root);
        while (!line.empty()) {
            Node* tmp = line.top();
            line.pop();
            if (tmp != nullptr) {
                for (int i=tmp->children.size()-1;i>=0;i--) 
                    if (tmp->children[i]) line.push(tmp->children[i]);
                line.push(tmp);
                line.push(nullptr);
            } else {
                ans.push_back(line.top()->val);
                line.pop();
            }
        }
        return ans;
    }
};
