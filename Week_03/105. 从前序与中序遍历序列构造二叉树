/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        int index = 0;
        return DFS(preorder, inorder, index, 0, preorder.size() - 1); 
    }
    TreeNode* DFS(vector<int>& preorder, vector<int>& inorder, int& index, int left, int right) {
         if (left > right) return NULL;
         int pivot = left;
         while (inorder[pivot] != preorder[index]) pivot++;
         index++;
         TreeNode* root = new TreeNode(inorder[pivot]);
         root->left = DFS(preorder, inorder, index, left, pivot - 1);
         root->right = DFS(preorder, inorder, index, pivot + 1, right);
         return root;
    }
};
