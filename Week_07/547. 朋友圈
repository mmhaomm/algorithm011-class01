class Solution {
public:
    int parent[210];
    int findCircleNum(vector<vector<int>>& M) {
        Init();
        for (int i = 0; i < M.size(); i++) 
            for (int j = i + 1; j < M.size(); j++) 
                if (M[i][j] == 1)
                    Union(i, j);
        int count = 0;
        for (int i = 0; i < M.size(); i++) 
            if (i == parent[i])
                count++;
        return count;
    }
    void Init () {
        for (int i = 0; i < 210; i++) 
            parent[i] = i;       
    }
    int FindParent(int i) {
        if (parent[i] != i)
            parent[i] = FindParent(parent[i]);
        return parent[i];
    }
    void Union(int x, int y) {
        int xp = FindParent(x);
        int yp = FindParent(y);
        if (xp != yp)
            parent[xp] = yp;
    }
};
