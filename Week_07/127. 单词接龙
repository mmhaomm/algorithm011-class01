class Solution {
public:
    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {
        unordered_set<string> dict(wordList.begin(), wordList.end()), head, tail;
        if (dict.find(endWord) == dict.end()) return 0;
        int ans = 2;
        head.insert(beginWord);
        tail.insert(endWord);
        while (!head.empty() && !tail.empty()) {
            if (head.size() > tail.size()) {
                swap(head, tail);
            }
            unordered_set<string> tmp ;
            for (auto it : head) {
                string word = it;
                for (int i = 0; i < word.size(); i++) {
                    char letter = word[i];
                    for (int j = 0; j < 26; j++) {
                        word[i] = 'a' + j;
                        if (tail.find(word) != tail.end()) 
                            return ans;
                        if (dict.find(word) != dict.end()) {
                            tmp.insert(word);
                            dict.erase(word);
                        }
                    }
                    word[i] = letter;
                }
            }
            ans++;
            swap(tmp, head);
        }
        return 0;
    }
};
